// <auto-generated />
using System;
using GreatnessFT;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreatnessFT.Migrations
{
    [DbContext(typeof(VehicleContext))]
    partial class VehicleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("GreatnessFT.Entities.Booking", b =>
                {
                    b.Property<Guid>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BCustFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BCustLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BCustPhone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BDriver")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BUser")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BVehicle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DropOffDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("PickUpDate")
                        .HasColumnType("TEXT");

                    b.HasKey("BId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("GreatnessFT.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("CustJoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CustPhone")
                        .HasColumnType("INTEGER");

                    b.HasKey("CustId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GreatnessFT.Entities.Driver", b =>
                {
                    b.Property<Guid>("DriversId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DriversAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DriversDOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("DriversFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DriversGender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DriversJoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DriversLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DriversPhone")
                        .HasColumnType("INTEGER");

                    b.HasKey("DriversId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("GreatnessFT.Entities.User", b =>
                {
                    b.Property<Guid>("UsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsersAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("UsersDOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsersFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsersGender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("UsersJoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsersLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsersPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsersPhone")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GreatnessFT.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("VId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("VBooked")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VEngType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VLicensePlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VMake")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VMileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("VId");

                    b.ToTable("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
